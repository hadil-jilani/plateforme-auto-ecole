version: '3.9'
services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    volumes:
      - /var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      retries: 10
      timeout: 5s

  auth:
    build:
      context: ./
      dockerfile: ./apps/auth/Dockerfile
    env_file:
      - .env
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run start:dev auth # overrides CMD from Dockerfile


  api:
    build:
      context: ./
      dockerfile: ./apps/api/Dockerfile
    ports:
      - '3000:3000'
    env_file:
      - .env
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - .:/usr/src/app 
      - /usr/src/app/node_modules
    command: npm run start:dev api

  # email:
  #   build:
  #     context: ./
  #     dockerfile: ./apps/email/Dockerfile
  #   env_file:
  #     - .env
  #   depends_on:
  #     rabbitmq:
  #       condition: service_healthy
  #   volumes:
  #     - .:/usr/src/app
  #     - /usr/src/app/node_modules
  #   command: npm run start:dev email # overrides CMD from Dockerfile

  # demandes:
  #   build:
  #     context: ./
  #     dockerfile: ./apps/demandes/Dockerfile
  #   env_file:
  #     - .env
  #   depends_on:
  #     rabbitmq:
  #       condition: service_healthy
  #   volumes:
  #     - .:/usr/src/app
  #     - /usr/src/app/node_modules
  #   command: npm run start:dev demandes # overrides CMD from Dockerfile
